syntax = "proto3";
option java_package = "de.fhg.aisec.ids.messages";
option java_outer_classname = "IDSCPv2";

//IDSCP message frame, contains a type identifier of the following message and the message
message IdscpMessage {
    enum Type {
        IDSCP_HELLO = 0;            //open a connection by sending an IDSCP_HELLO
        IDSCP_CLOSE = 1;            //send an IDSCP_CLOSE, that triggers connection close
        IDSCP_ERROR = 2;            //send an error message
        IDSCP_DAT_EXPIRED = 3;      //request a ne dynamicAttributeToken
        IDSCP_DAT = 4;              //send dynamicAttributeToken
        IDSCP_RE_RAT = 5;           //request a new remote Attestation
        IDSCP_RAT_PROVER = 6;       //send
        IDSCP_RAT_VERIFIER = 7;     //send
        IDSCP_DATA = 8;             //send IDSCP Payload
    }

    // Identifies which field is filled in.
    Type type = 1;

    // One of the following will be filled in.
    oneof message {
        IdscpHello idscpHello = 2;
        IdscpClose idscpClose = 3;
        IdscpError idscpError = 4;
        IdscpDatExpired idscpDatExpired = 5;
        IdscpDat idscpDat = 6;
        IdscpReRat idscpReRat = 7;
        IdscpRatProver idscpRatProver = 8;
        IdscpRatVerifier idscpRatVerifier = 9;
        IdscpData idscpData = 10;
    }
}

//IDSCP messages
message IdscpHello {
    int32 version = 1;                      //IDSCP protocol version
    IdscpDat dynamicAttributeToken = 2;     //initial dynamicAttributeToken
    repeated string supportedRatSuite = 3;  //RemoteAttestationCipher prover
    repeated string expectedRatSuite = 4;   //RemoteAttestationCipher verifier
}

message IdscpClose {
}

message IdscpError {
    string error_code = 1;
    string error_msg = 2;
}

message IdscpDatExpired {           //request new dynamicAttributeToken
}

message IdscpDat {
    bytes token = 1;
}

message IdscpReRat {                //request new remoteAttestation
    string cause = 1;               //optional
}

message IdscpRatProver {
    bytes data = 1;
}

message IdscpRatVerifier {
    bytes data = 1;
}

message IdscpData {
    bytes data = 1 ;
}
