%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Prolog representation of a data flow policy
%   
%   Source: example
% 	
%	Do not edit this file, it has been generated automatically
% 	by XText/Xtend.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Only required for SWI-Prolog
% Allow the following predicates to be scattered around the prolog file.
% Otherwise Prolog will issue a warning if they are not stated in subsequent lines.		
%:- discontiguous service/1.
%:- discontiguous rule/1.
%:- discontiguous has_capability/2.
%:- discontiguous has_property/3.
%:- discontiguous has_target/2.
%:- discontiguous requires_prerequisites/2.
%:- discontiguous has_alternativedecision/2.
%:- discontiguous has_obligation/2.
%:- discontiguous receives_label/1.

%%%%%%%% Rules %%%%%%%%%%%%
% I am a test rule of prio 3
rule(testRulePrioThree).
rule_priority(testRulePrioThree, 3).
has_target(testRulePrioThree, service1831859244).
service(service1831859244).
has_endpoint(service1831859244,".*").

receives_label(testRulePrioThree) :- label(private) ; label(unfiltered).
has_obligation(testRulePrioThree, obl1).

has_decision(testRulePrioThree, drop).

% I am a test rule of prio 2
rule(testRulePrioTwo).
rule_priority(testRulePrioTwo, 2).
has_target(testRulePrioTwo, allHadoops).

receives_label(testRulePrioTwo) :- label(public), label(filtered).
has_obligation(testRulePrioTwo, obl2).
has_decision(testRulePrioTwo, allow).

%%%%% Services %%%%%%%%%%%%
service(allHadoops).
has_endpoint(allHadoops, "^hdfs://.*").
has_property(allHadoops,trustLevel,platform).
