apply plugin: 'com.github.lburgazzoli.karaf'

description = 'IDS Karaf Feature'

dependencies {
    // only pull in the dependencies that will be provided by bundles (or wrapped) from the other projects
    providedByBundle project(path: ':ids-api', configuration: 'providedByBundle')
    providedByBundle project(path: ':ids-acme', configuration: 'providedByBundle')
    providedByBundle project(path: ':ids-comm', configuration: 'providedByBundle')
    providedByBundle project(path: ':ids-container-manager', configuration: 'providedByBundle')
    providedByBundle project(path: ':ids-dataflow-control', configuration: 'providedByBundle')
    providedByBundle project(path: ':ids-route-manager', configuration: 'providedByBundle')
    providedByBundle project(path: ':ids-webconsole', configuration: 'providedByBundle')
    providedByBundle project(path: ':camel-ids', configuration: 'providedByBundle')
    providedByBundle project(path: ':tpm2j', configuration: 'providedByBundle')
}

// Karaf 4.2 will default to a version 6 of the org.objectweb.asm package, which is not compatible with jnr-unixsocket
// Therefore, force the version of the ow2.asm packages to be compatible with jnr-unixsocket so both versions will be shupped
configurations.all {
    resolutionStrategy {
        force "org.ow2.asm:asm:5.0.3"
        force "org.ow2.asm:asm-commons:5.0.3"
        force "org.ow2.asm:asm-analysis:5.0.3"
        force "org.ow2.asm:asm-tree:5.0.3"
        force "org.ow2.asm:asm-util:5.0.3"
    }
}

karaf {
    features {
        xsdVersion  = '1.2.0'
        // it seems to be best practice to include the version in the feature repository as well
        name = "ids-${project.version}"
        version = project.version

        // the camel repository
        repository "mvn:org.apache.camel.karaf/apache-camel/${libraryVersions.camel}/xml/features"

        // include cxf repository, since the camel one is slightly outdated
        repository "mvn:org.apache.cxf.karaf/apache-cxf/${libraryVersions.cxf}/xml/features"
        
        feature {
            name = 'ids'
            description = 'IDS Feature'

            // only specifiy the dependencies that will be provided by bundles, the rest will be specified via features
            configurations 'providedByBundle'

            // standard feature, but we need to explicitly state it here so that it gets installed in our bare Karaf
            feature 'jetty'

            // CXF for REST APIs
            feature 'cxf-jaxrs'
            //feature 'cxf-jackson'

            // CXF commands for the shell
            /*
             TODO: this should actually be a conditional dependency, only if shell is available.
             however the karaf assemble plugin does not seem to resolve these conditions during packaging.
            */
            feature 'cxf-commands'
		
		    // to deploy Web Application Bundles, such as our WebConsole
            feature 'war'
		
            // Camel for routing		
		    feature 'camel-jackson'
		    feature 'camel-milo'
		    feature 'camel-cxf'
		    feature 'camel-ahc'
            feature 'camel-http'
            feature 'camel-jetty'

            // start our bundles a lit bit later
            bundle ('de.fhg.ids') {
                attribute 'start-level', '90'
            }
        }
    }
}
