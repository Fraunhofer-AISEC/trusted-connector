// Copy example and example-localhost to build directory
task copyExample(type: Copy) {
    doFirst {
        delete project.buildDir
    }
    from (project.projectDir) {
        include 'example-*/**', 'tpmsim/tpmsim_data.tar', 'tpmsim/rootCA.crt', 'cert-stores/*'
        exclude 'example-idscp/example-client'
        exclude 'example-idscp/example-server'
    }
    into project.buildDir
}

// Overwrite docker compose files with evaluated templates to use latest docker tag
task processTemplates(type: Copy) {
    from 'templates'
    include '**/.env'
    into project.buildDir
    expand(exampleTag: findProperty('exampleTag'))
    inputs.property 'exampleTag', findProperty('exampleTag')
    inputs.dir('templates').withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.cacheIf { true }
}
processTemplates.dependsOn copyExample
processTemplates.onlyIf { findProperty('exampleTag') != null }

// Create ZIP archive with example and example-localhost, see task copyExample
task zipExample(type: Zip) {
    from fileTree(dir: project.buildDir)
    archiveFileName = "${projectDir}/trusted-connector-examples_${findProperty('exampleTag')}.zip"
}
zipExample.dependsOn processTemplates
zipExample.onlyIf { findProperty('exampleTag') != null }
processResources.dependsOn zipExample

// Delete the redundant build directory after install or build, if executed
gradle.taskGraph.whenReady {
    Task task = (Task) [install, build].find({ gradle.taskGraph.hasTask((Task) it) })
    if (task != null) {
        task.doLast {
            delete "$projectDir/build"
        }
    }
}