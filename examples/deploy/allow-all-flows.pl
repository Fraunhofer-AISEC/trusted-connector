%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Prolog representation of a data flow policy
%   
%   Source: default
%
%	Do not edit this file, it has been generated automatically
% 	by XText/Xtend.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Only required for SWI-Prolog
% Allow the following predicates to be scattered around the prolog file.
% Otherwise Prolog will issue a warning if they are not stated in subsequent lines.
%:- discontiguous service/1.
%:- discontiguous has_endpoint/2.
%:- discontiguous creates_label/2.
%:- discontiguous removes_label/2.
%:- discontiguous rule/1.
%:- discontiguous rule_priority/2.
%:- discontiguous receives_label/1.
%:- discontiguous has_decision/2.
%:- discontiguous has_target/2.
%:- discontiguous has_capability/2.
%:- discontiguous has_property/3.
%:- discontiguous requires_prerequisites/2.
%:- discontiguous has_alternativedecision/2.
%:- discontiguous has_obligation/2.

%%%%%%%%% Basic Blocking Rule %%%%%%%%%%
rule(dropAll).
rule_priority(dropAll,0).
has_decision(dropAll,drop).
receives_label(dropAll).
has_target(dropAll,serviceAll).

%%%%%%%%%% Catch All Service %%%%%%%%%%%
service(serviceAll).
has_endpoint(serviceAll,'.*').

%%%%%%%%%%%%%%%% Rules %%%%%%%%%%%%%%%%%
% Allow everything
rule(allowAll).
rule_priority(allowAll, 1).
has_target(allowAll, serviceAll).
receives_label(allowAll).
has_decision(allowAll, allow).