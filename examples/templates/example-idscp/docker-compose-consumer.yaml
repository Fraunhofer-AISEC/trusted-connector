version: '2'
services:

  # TPM simulator
  ids-tpmsim-consumer:
    image: fraunhoferaisec/tpmsim:${dockerTag}
    volumes:
      # Always extract a "clean state" for our TPM simulator to prevent DA lockout issues
      - ../tpmsim/tpmsim_data.tar:/tpmsim_data.tar
    networks:
      - consumer-internal

  # The core platform, mounts docker control socket and route definition into the image
  consumer-core:
    image: fraunhoferaisec/trusted-connector-core:${dockerTag}
    tty: true
    stdin_open: true
    volumes:
      - ../log/:/root/log/
      - /var/run/docker.sock:/var/run/docker.sock
      - ./system.properties:/root/etc/system.properties
      - ../tpmsim/rootCA.crt:/root/etc/rootca-cert.pem
      - ../cert-stores/consumer-keystore.p12:/root/etc/consumer-keystore.p12
      - ../cert-stores/truststore.p12:/root/etc/truststore.p12
      - ./example-consumer-routes.xml:/root/deploy/example-consumer-routes.xml
    environment:
      - TPM_HOST=ids-tpmsim-consumer
    # Enable this port mappings for debugging or UI access from localhost
#    ports:
#      - "5005:5005"
#      - "8181:8181"
#      - "8443:8443"
    # Enable this port mapping (along with "ports:" above) to allow access to IDSCP from outside the ids-wide network
#      - "9292:9292"
    networks:
      - ids-wide
      - consumer-internal

  # Data App (REST consumer, displays web page)
  consumer-app:
    image: fraunhoferaisec/example-server:${dockerTag}
    ports:
      - "8081:8081"
    networks:
      - consumer-internal

networks:
  ids-wide:
    driver: bridge
  consumer-internal:
    driver: bridge
