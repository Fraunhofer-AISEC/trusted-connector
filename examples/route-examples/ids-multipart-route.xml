<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
          http://camel.apache.org/schema/spring
          http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- Define a reference for our REST MIME-Multipart Processor -->
	<bean id="mpOutProcessor" class="de.fhg.aisec.ids.camel.multipart.MultiPartOutputProcessor" />
	<bean id="mpInProcessor" class="de.fhg.aisec.ids.camel.multipart.MultiPartInputProcessor" />

	<!-- Routes -->
	<camelContext xmlns="http://camel.apache.org/schema/spring">
		<route id="multipartDemo">

			<!--  Just do something every 4 seconds -->
			<from uri="timer://foo?fixedRate=true&amp;period=4000" />

			<!--  Timer creates an empty body, so we set some dummy data here -->
			<setBody>
				<simple>Test Message</simple>
			</setBody>

			<process ref="mpOutProcessor" />

			<!-- Required for test logging, otherwise stream is "empty" after log component -->
			<convertBodyTo type="java.lang.String"/>
			<log message="Test message multipart body:\n${body}" />

			<process ref="mpInProcessor" />

			<log message="Test message header:\n${headers.idsMultipartHeader}" />
			<log message="Test message content type:\n${header[Content-Type]}" />
			<log message="Test message payload:\n${body}" />
			
			<!-- Send it to some web server -->
			<!--<to uri="http://localhost:8000" />-->

		</route>

	</camelContext>

</beans>
