<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:camel="http://camel.apache.org/schema/blueprint"
 xmlns:camel-cxf="http://camel.apache.org/schema/blueprint/cxf"
 xmlns:cxfcore="http://cxf.apache.org/blueprint/core"
 xsi:schemaLocation="
 http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

 <!-- Define TLS configuration for data provider -->
 <camel:sslContextParameters id="clientSslContext">
	<camel:keyManagers keyPassword="password">
		<camel:keyStore  resource="etc/client-keystore.jks" password="password"/>
	</camel:keyManagers>
	<camel:trustManagers>
	 <camel:keyStore resource="etc/client-truststore.jks" password="password"/>
 </camel:trustManagers>
</camel:sslContextParameters>

<!-- Routes -->
<camelContext xmlns="http://camel.apache.org/schema/blueprint">
 <!-- Retrieve temperature value from Data App via HTTP GET request and forward it over secure IDS protocol,
 			setting remote attestation to most relaxed config (for demo only. Use 1 in production )-->
	<route id="sendTemp">
		<from uri="timer://tempPerSecond?fixedRate=true&amp;period=1000"/>
		<to uri="ahc:http://provider-app:8080/temp"/>
		<convertBodyTo type="java.lang.String"/>
		<log message="Got temperature ${body}"/>
		<to uri="idsclient://consumer-core:9292/zero?sslContextParameters=#clientSslContext&amp;attestation=2&amp;attestationMask=0" />
	</route>
</camelContext>
</blueprint>
