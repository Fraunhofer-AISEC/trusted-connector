plugins {
    id 'java'
    id 'com.google.protobuf' version '0.8.5'
    id 'com.moowork.node' version '1.2.0'
    id 'biz.aQute.bnd' version '4.0.0' apply false
    id 'com.github.lburgazzoli.karaf' version '0.0.49'
    id 'org.jetbrains.kotlin.jvm' version '1.2.61'
    id 'com.github.dkorotych.gradle-maven-exec' version '1.2.2.1'
    id 'com.benjaminsproule.swagger' version '1.0.4'
    id 'com.bmuschko.docker-remote-api' version '3.4.3'
    id 'com.diffplug.gradle.spotless' version '3.13.0'
}

allprojects {
    group = 'de.fhg.ids'
    version = '1.1.0-SNAPSHOT'

    ext.libraryVersions = [
            // basically, the first requirement, all other libraries depend on this version
            karaf         : '4.2.0',
            pax           : '7.0.0',

            camel         : '2.21.1',

            // Camel ships with cxf, however it is slightly older so we want a newer version
            cxf           : '3.2.4',

            // OSGI libraries
            osgiCompendium: '5.0.0',
            osgi          : '6.0.0',
            felixFramework: '5.4.0',

            ahc           : '2.4.9',
            acme          : '2.0',
            checkerQual   : '2.5.2',
            guava         : '26.0-jre',
            kotlin        : '1.2.61',
            tuprolog      : '3.2.1',
            log4j         : '2.6.2',
            junit4        : '4.12',
            mapdb         : '3.0.7',
            jnrunix       : '0.18',
            protobuf      : '3.5.1',

            // it seems not all jetty components are in our BOM so we need to specify it here as well
            jetty         : '9.4.6.v20170531',

            // we will pull in a newer version of jackson because of security fixes
            jackson       : '2.9.5',

            // needed for rat-repository, should be seperated 
            jersey        : '2.26',
            mockito       : '1.10.19'
    ]

    configurations {
        // just to make boms easier to see in the dependency tree
        bom
        implementation.extendsFrom bom
        testImplementation.extendsFrom bom

        // an implementation dependency that will be provided through a feature in the OSGi environment        
        providedByFeature
        implementation.extendsFrom providedByFeature

        // an implementation dependency that will be provided by a bundle or wrapped in the OSGi environment
        providedByBundle
        implementation.extendsFrom providedByBundle

        // osgi core dependencies only needed for compiling, they will just be there during runtime
        osgiCore
        compileOnly.extendsFrom osgiCore

        // but we need them in testing
        testImplementation.extendsFrom osgiCore
    }
}

subprojects {
    apply plugin: 'biz.aQute.bnd.builder'
    apply plugin: 'java'
    apply plugin: 'maven'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    test {
        exclude '**/*IT.*'
    }

    task integrationTest(type: Test) {
        include '**/*IT.*'
    }

    // define some Bill of Materials (BOM) for all subprojects
    dependencies {
        // BOM from Karaf, sets common version for OSGi libraries
        bom group: 'org.apache.karaf', name: 'karaf', version: libraryVersions.karaf

        // BOM for pax, for jetty, etc.
        bom group: 'org.ops4j.pax', name: 'web', version: libraryVersions.pax
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Jar) {
        jar {
            manifest {
                // set the vendor
                attributes 'Bundle-Vendor': 'Fraunhofer AISEC'

                // TODO: this was set in most of the bnd files. do we really need this?
                attributes '-noee': true
            }
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

configure(subprojects.findAll { !it.name.contains('tpm2j') }) {
    apply plugin: 'com.diffplug.gradle.spotless'

    spotless {
        java {
            enforceCheck = false // do not really check for now, we first need to format all the files

            googleJavaFormat()

            licenseHeader('''/*-
 * ========================LICENSE_START=================================
 * ''' + project.name + '''
 * %%
 * Copyright (C) $YEAR Fraunhofer AISEC
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================LICENSE_END==================================
 */''').yearSeparator(' - ')
        }
    }
}
