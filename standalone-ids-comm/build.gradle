repositories {
    maven {
        url "file://${rootProject.buildDir}/repo"
    }
}

dependencies {
    implementation group: "de.fhg.aisec.ids", name: "ids-comm", version: rootProject.version

    implementation group: "javax.xml.bind", name: "jaxb-api", version: libraryVersions.jaxb
    implementation group: "com.sun.xml.bind", name: "jaxb-core", version: libraryVersions.jaxb
    implementation group: "com.sun.xml.bind", name: "jaxb-impl", version: libraryVersions.jaxb

    testImplementation group: 'junit', name: 'junit', version: libraryVersions.junit4
    testImplementation group: 'org.mockito', name: 'mockito-all', version: libraryVersions.mockito
}

// Separate task for fat jar required, otherwise "publish" (see below) publishes the fat jar
task fatJar (type: Jar) {
    manifest {
        attributes "Main-Class": "de.fhg.aisec.ids.comm.app.Client"
    }

    from {
        //noinspection GroovyAssignabilityCheck
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    archiveAppendix = 'bundle'
}
// Build fat jar after default jar task
jar.finalizedBy fatJar

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        commStandaloneLibrary(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = 'localRepo'
            url = "file://${rootProject.buildDir}/repo"
        }
    }
}

//signing {
//    sign publishing.publications.commStandaloneLibrary
//}